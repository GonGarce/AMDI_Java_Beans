package io.gongarce.ud2_components_example;

import io.gongarce.ud2_components.Encoder;
import io.gongarce.ud2_components.Serializer;
import io.gongarce.ud2_components.info_message.InfoMessage;
import io.gongarce.ud2_components.info_message.InfoMessageButton;
import io.gongarce.ud2_components.info_message.InfoMessageButtonListener;
import io.gongarce.ud2_components.info_message.InfoMessageCloseListener;
import io.gongarce.ud2_components.info_message.InfoMessageModel;
import io.gongarce.ud2_components.info_message.StateMessage;
import io.gongarce.ud2_components.state_label.State;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.beans.PropertyVetoException;
import java.util.Objects;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.prefs.BackingStoreException;
import java.util.prefs.Preferences;

/**
 *
 * @author Gonzalo
 */
public class FrameWithStateLabel extends javax.swing.JFrame implements ActionListener {

    /**
     * Creates new form FrameWithStateLabel
     */
    public FrameWithStateLabel() {
        initComponents();
        this.setLocationRelativeTo(null);

        lblState.setText("State: Default");
        radioDefault.setSelected(true);

        radioDefault.addActionListener(this);
        radioError.addActionListener(this);
        radioSuccess.addActionListener(this);
        radioWarning.addActionListener(this);

        // Propiedades
        infoMessage.addPropertyChangeListener((evt) -> {
            System.out.println("[AllProperties]: " + evt.getPropertyName());
        });
        infoMessage.addPropertyChangeListener(InfoMessage.PROP_STATE, (evt) -> {
            System.out.println("[StateProperty]: " + evt.getNewValue());
        });
        infoMessage.addVetoableChangeListener((evt) -> {
            System.out.println("[VetoableProperty]: " + evt.getPropertyName());
            if (InfoMessage.PROP_TITLE.equals(evt.getPropertyName())) {
                System.out.println("[VetoableProperty]: isTitle");
                if (Objects.isNull(evt.getNewValue()) || ((String) evt.getNewValue()).isBlank()) {
                    throw new PropertyVetoException("Empty title", evt);
                }
            }
        });
        // Eventos
        infoMessage.addCloseListener(new InfoMessageCloseListener() {
            @Override
            public void onClose() {
                infoMessage.setVisible(false);
                FrameWithStateLabel.this.remove(infoMessage);
            }
        });
        infoMessage.addButtonsListener(new InfoMessageButtonListener() {
            @Override
            public void onAction(String button) {
                System.out.println("Button action: " + button);
            }
        });
        Preferences prefs = Preferences.userRoot().node("infoMessage2");
        infoMessage2.setCloseVisibility(prefs.getBoolean("CLOSE", infoMessage2.getCloseVisibility()));

        // Update message with saved model
        infoMessage2.addPropertyChangeListener((evt) -> {
            System.out.println("[AllProperties]: " + evt.getPropertyName());
            if ("model".equals(evt.getPropertyName())){
                revalidate();
                repaint();
            }
        });
        InfoMessageModel model = Encoder.read("infosave.xml", InfoMessageModel.class);
        if (Objects.nonNull(model)) {
            infoMessage2.setModel(model);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        radioGroupState = new javax.swing.ButtonGroup();
        lblState = new io.gongarce.ud2_components.state_label.StateLabel();
        companyLogo2 = new io.gongarce.ud2_components.company_logo.CompanyLogo();
        infoMessage = new io.gongarce.ud2_components.info_message.InfoMessage();
        jPanel1 = new javax.swing.JPanel();
        radioDefault = new javax.swing.JRadioButton();
        radioWarning = new javax.swing.JRadioButton();
        radioSuccess = new javax.swing.JRadioButton();
        radioError = new javax.swing.JRadioButton();
        infoMessage2 = new io.gongarce.ud2_components.info_message.InfoMessage();
        jPanel2 = new javax.swing.JPanel();
        btnToggleGlobal = new javax.swing.JButton();
        btnToggle1 = new javax.swing.JButton();
        btnToggle2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        java.awt.GridBagLayout layout = new java.awt.GridBagLayout();
        layout.columnWeights = new double[] {0.5, 0.5};
        getContentPane().setLayout(layout);

        lblState.setState(io.gongarce.ud2_components.state_label.State.DEFAULT);
        lblState.setText("stateLabel2");
        lblState.setTextColor(new java.awt.Color(0, 102, 255));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipady = 20;
        getContentPane().add(lblState, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 0, 0);
        getContentPane().add(companyLogo2, gridBagConstraints);

        infoMessage.setMessage("I will notify every suscriber when a property change");
        infoMessage.setTitle("Did you know?");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(infoMessage, gridBagConstraints);

        jPanel1.setLayout(new java.awt.GridLayout(2, 2, 20, 10));

        radioGroupState.add(radioDefault);
        radioDefault.setSelected(true);
        radioDefault.setText("Default");
        jPanel1.add(radioDefault);

        radioGroupState.add(radioWarning);
        radioWarning.setText("Warning");
        jPanel1.add(radioWarning);

        radioGroupState.add(radioSuccess);
        radioSuccess.setText("Success");
        jPanel1.add(radioSuccess);

        radioGroupState.add(radioError);
        radioError.setText("Error");
        jPanel1.add(radioError);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(jPanel1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(infoMessage2, gridBagConstraints);

        btnToggleGlobal.setText("Toggle  Global");
        btnToggleGlobal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnToggleGlobalActionPerformed(evt);
            }
        });
        jPanel2.add(btnToggleGlobal);

        btnToggle1.setText("Toggle Message 2");
        btnToggle1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnToggle1ActionPerformed(evt);
            }
        });
        jPanel2.add(btnToggle1);

        btnToggle2.setText("Clear Message 2");
        btnToggle2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnToggle2ActionPerformed(evt);
            }
        });
        jPanel2.add(btnToggle2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(jPanel2, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnToggleGlobalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnToggleGlobalActionPerformed
        infoMessage.toggleCloseVisibility();
    }//GEN-LAST:event_btnToggleGlobalActionPerformed

    private void btnToggle1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnToggle1ActionPerformed
        Preferences prefs = Preferences.userRoot().node("infoMessage2");
        boolean visibility = !infoMessage2.getCloseVisibility();
        prefs.putBoolean("CLOSE", visibility);
        infoMessage2.setCloseVisibility(visibility);
    }//GEN-LAST:event_btnToggle1ActionPerformed

    private void btnToggle2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnToggle2ActionPerformed
        Preferences prefs = Preferences.userRoot().node("infoMessage2");
        try {
            prefs.clear();
        } catch (BackingStoreException ex) {
            Logger.getLogger(FrameWithStateLabel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnToggle2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameWithStateLabel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameWithStateLabel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameWithStateLabel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameWithStateLabel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameWithStateLabel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnToggle1;
    private javax.swing.JButton btnToggle2;
    private javax.swing.JButton btnToggleGlobal;
    private io.gongarce.ud2_components.company_logo.CompanyLogo companyLogo2;
    private io.gongarce.ud2_components.info_message.InfoMessage infoMessage;
    private io.gongarce.ud2_components.info_message.InfoMessage infoMessage2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private io.gongarce.ud2_components.state_label.StateLabel lblState;
    private javax.swing.JRadioButton radioDefault;
    private javax.swing.JRadioButton radioError;
    private javax.swing.ButtonGroup radioGroupState;
    private javax.swing.JRadioButton radioSuccess;
    private javax.swing.JRadioButton radioWarning;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        infoMessage.setButtons(null);
        if (radioDefault.isSelected()) {
            lblState.setText("State: Default");
            lblState.setState(State.DEFAULT);
            infoMessage.setState(StateMessage.INFO);
            infoMessage.setTitle("Title info");
            infoMessage.setMessage("A informative message");
        } else if (radioError.isSelected()) {
            lblState.setText("State: Error");
            lblState.setState(State.ERROR);
            infoMessage.setState(StateMessage.ERROR);
            infoMessage.setTitle("");
            infoMessage.setMessage("An error message");
            infoMessage.setButtons(new InfoMessageButton[]{
                new InfoMessageButton("Retry", (evt) -> {
                    System.out.println("Retry button");
                })
            });
        } else if (radioSuccess.isSelected()) {
            lblState.setText("State: Success");
            lblState.setState(State.SUCCESS);
            infoMessage.setState(StateMessage.SUCCESS);
            infoMessage.setTitle("Title ok");
            infoMessage.setMessage("A successful message");
        } else if (radioWarning.isSelected()) {
            lblState.setText("State: Warning");
            lblState.setState(State.WARNING);
            infoMessage.setState(StateMessage.WARNING);
            infoMessage.setTitle("Title warning");
            infoMessage.setMessage("A warning message");
            infoMessage.setButtons(new InfoMessageButton[]{
                new InfoMessageButton("Accept", (evt) -> {
                    System.out.println("Accept button");
                }),
                new InfoMessageButton("Decline", (evt) -> {
                    System.out.println("Decline button");
                })
            });
        }
        repaint();
        Encoder.save("infosave.xml", infoMessage.getModel());
    }
}
